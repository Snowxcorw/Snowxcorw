npx create-react-app bounty-hunter-frontend
cd bounty-hunter-frontend
npm install axios react-router-dom tailwindcss
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ["./src/**/*.{js,jsx,ts,tsx}"],
  theme: {
    extend: {},
  },
  plugins: [],
};
@tailwind base;
@tailwind components;
@tailwind utilities;
/src
  ├── components
  │     ├── BountyList.js
  │     ├── CreateBounty.js
  │     ├── Navbar.js
  ├── pages
  │     ├── Home.js
  │     ├── Login.js
  │     ├── Signup.js
  ├── App.js
  ├── index.js
import React from "react";
import { BrowserRouter as Router, Route, Routes } from "react-router-dom";
import Home from "./pages/Home";
import Login from "./pages/Login";
import Signup from "./pages/Signup";
import Navbar from "./components/Navbar";

function App() {
  return (
    <Router>
      <Navbar />
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/login" element={<Login />} />
        <Route path="/signup" element={<Signup />} />
      </Routes>
    </Router>
  );
}

export default App;
import React from "react";
import { Link } from "react-router-dom";

const Navbar = () => {
  return (
    <nav className="bg-gray-800 text-white p-4">
      <div className="container mx-auto flex justify-between">
        <Link to="/" className="text-lg font-bold">
          Bounty Hunter
        </Link>
        <div>
          <Link to="/login" className="mr-4">Login</Link>
          <Link to="/signup">Signup</Link>
        </div>
      </div>
    </nav>
  );
};

export default Navbar;
import React, { useState, useEffect } from "react";
import axios from "axios";
import BountyList from "../components/BountyList";
import CreateBounty from "../components/CreateBounty";

const Home = () => {
  const [bounties, setBounties] = useState([]);

  // Fetch bounties from backend
  useEffect(() => {
    axios.get("http://localhost:5000/api/bounties")
      .then((response) => setBounties(response.data))
      .catch((error) => console.error(error));
  }, []);

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">Available Bounties</h1>
      <BountyList bounties={bounties} />
      <CreateBounty setBounties={setBounties} />
    </div>
  );
};

export default Home;
import React from "react";

const BountyList = ({ bounties }) => {
  return (
    <div>
      {bounties.map((bounty) => (
        <div
          key={bounty._id}
          className="bg-gray-100 p-4 mb-4 rounded shadow-md"
        >
          <h2 className="text-xl font-bold">{bounty.title}</h2>
          <p>{bounty.description}</p>
          <p className="text-green-600">Reward: ${bounty.reward}</p>
        </div>
      ))}
    </div>
  );
};

export default BountyList;
import React, { useState } from "react";
import axios from "axios";

const CreateBounty = ({ setBounties }) => {
  const [formData, setFormData] = useState({
    title: "",
    description: "",
    reward: "",
  });

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    axios.post("http://localhost:5000/api/bounties", formData)
      .then((response) => {
        setBounties((prev) => [...prev, response.data]);
        setFormData({ title: "", description: "", reward: "" });
      })
      .catch((error) => console.error(error));
  };

  return (
    <form className="mt-8" onSubmit={handleSubmit}>
      <h2 className="text-lg font-bold mb-2">Post a New Bounty</h2>
      <input
        type="text"
        name="title"
        placeholder="Title"
        value={formData.title}
        onChange={handleChange}
        className="border p-2 w-full mb-2"
        required
      />
      <textarea
        name="description"
        placeholder="Description"
        value={formData.description}
        onChange={handleChange}
        className="border p-2 w-full mb-2"
        required
      />
      <input
        type="number"
        name="reward"
        placeholder="Reward ($)"
        value={formData.reward}
        onChange={handleChange}
        className="border p-2 w-full mb-2"
        required
      />
      <button
        type="submit"
        className="bg-blue-500 text-white py-2 px-4 rounded"
      >
        Post Bounty
      </button>
    </form>
  );
};

export default CreateBounty;
